@import "lib/prefixer";

@width: 640px;
@board-padding: 6px;
@frame-width: (@width - 2*@board-padding);
@board-size: 19;

@title-font-size: 15px;

@manual-font-size: 10px;

.shake() {
	0% { left: 0px; }
	10% { left: 10px; }
	20% { left: -10px; }
	30% { left: 5px; }
	40% { left: 5px; }
	50% { left: 3px; }
	60% { left: -3px; }
	70% { left: 2px; }
	80% { left: -2px; }
	90% { left: 1px; }
	100% { left: 1px; }
}

@-webkit-keyframes shake { .shake() }
@keyframes shake { .shake() }

.blink() {
    0% { opacity: 0; }
    50% { opacity: 1; }
    100% { opacity: 1; }
}
@-webkit-keyframes blink { .blink() }

/* modifying bootstrap */
.modal {
	width: (@width * 540 / 640);
	margin-left: (-@width * 540 / 640 / 2);
}

.modal h3 {
	text-align: center;
}

.modal-body p {
	font-size: 12px;
}

.modal.fade {
  -webkit-transition: opacity .3s linear, -webkit-transform .3s ease-out;
  -moz-transition: opacity .3s linear, -moz-transform .3s ease-out;
  -o-transition: opacity .3s linear, -o-transform .3s ease-out;
  transition: opacity .3s linear, transform .3s ease-out;
  top: 10%;
  -webkit-transform: translateY(-25%);
  -moz-transform: translateY(-25%);
  -o-transform: translateY(-25%);
  transform: translateY(0%);
}
.modal.fade.in {
  -webkit-transform: translateY(0%);
  -moz-transform: translateY(0%);
  transform: translateY(0%);
}
/* end of modifying bootstrap */

html, body {
	width: 100%;
}

body {
	padding: 0px;
	.user-select(none);
	background-color: black;
}

#header {
	position: relative;
	width: (@width - 5*2);
	padding: 5px;
	background-image: url(images/dragon.jpg);
	background-size: cover;
	background-repeat: no-repeat;
	background-position: top;
}

div.title {
	padding: 5px;
	position: relative;
	color: white;
}

h1 {
	margin: 0px;
	font-size: @title-font-size;
	line-height: @title-font-size;
	text-align: center;
}

.btn-large {
	font-size: @title-font-size;
	line-height: @title-font-size;
}

.board-bg {
	background-image: url('images/ban19.png');
	background-size: contain;
	width: @width;
	height: @width;
}

.board {
    position: relative;
    left: @board-padding;
    top: @board-padding;
	width: @frame-width;
	height: @frame-width;
}

.intersection {
	position: relative;
	float: left;
	width: (floor(@frame-width / @board-size));
	height: (floor(@frame-width / @board-size));
	background-position: center;
	background-repeat: no-repeat;
	background-size: contain;
    .animation-duration(0.5s);
    .animation-iteration-count(1);
    .animation-timing-function(linear);
	.transform(translateY(0%));
}

.intersection.shake {
    .animation-name(shake);
}

.intersection.rise {
    -webkit-transition: -webkit-transform 1s linear;
    -moz-transition: -moz-transform 1s linear;
    -o-transition: -o-transform 1s linear;
    transition: transform 1s linear;
	.transform(translateY((-(@frame-width / 9 * 16 + @frame-width / @board-size))));
}

.half-opacity {
	opacity: 0.5
}

.intersection.black {
	background-image: url('images/black.png');
}

.intersection.white {
	background-image: url('images/white.png');
}

#manual {
	position: absolute;
	margin: 0px;
	bottom: 0px;
	right: 10px;
	font-size: @manual-font-size;
	background-color: #FFFFFF;
	opacity: 0.7;
}

#evaluating {
	color: white;
	display: none;
	float: right;
	font-size: @title-font-size;
	.animation(blink 0.5s ease-in-out infinite alternate);
}

audio {
	/* iOSだとdisplay: noneでも大きさを持ちレイアウトに影響する */
	width: 0px;
	height: 0px;
}